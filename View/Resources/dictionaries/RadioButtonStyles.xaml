<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls2="clr-namespace:Fork.View.Xaml2.Controls">

    <Style TargetType="RadioButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource foregroundDefault}" />
    </Style>

    <Style TargetType="RadioButton" x:Key="CustomRadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Ellipse x:Name="indicator" Width="20" Height="20" Fill="{DynamicResource backgroundDark}" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="indicator" Property="Fill" Value="{DynamicResource tabSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRadioButton" TargetType="RadioButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal" Margin="0 5">
                        <Rectangle x:Name="indicator" Width="17" Height="17" Fill="{DynamicResource backgroundDarker}"
                                   Margin="0 0 10 0" />
                        <ContentPresenter />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="indicator" Property="Fill" Value="{DynamicResource tabSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls2:ServerTypeRadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="background" Background="{DynamicResource buttonBgrDefault}" Height="55"
                            CornerRadius="8">
                        <StackPanel Orientation="Horizontal" Margin="10 0">
                            <Image x:Name="image"
                                   Source="{Binding IconSource, RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin="5 8 5 8" />
                            <TextBlock x:Name="header" Margin="5 0 10 0"
                                       Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                                       Foreground="{DynamicResource backgroundDark}" FontSize="23"
                                       FontFamily="{DynamicResource Montserrat-Bold}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="header" Property="Foreground" Value="{DynamicResource textSelected}" />
                            <Setter TargetName="image" Property="Source"
                                    Value="{Binding HoverIconSource, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="background" Property="Background" Value="{DynamicResource tabSelected}" />
                            <Setter TargetName="header" Property="Foreground" Value="{DynamicResource textSelected}" />
                            <Setter TargetName="image" Property="Source"
                                    Value="{Binding HoverIconSource, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls2:IconRadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="imageBorder" Background="{DynamicResource backgroundDark}" Height="50" Width="50"
                            CornerRadius="8">
                        <Image x:Name="image"
                               Source="{Binding IconSource, RelativeSource={RelativeSource TemplatedParent}}"
                               Width="21" Height="24" RenderOptions.BitmapScalingMode="Linear" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="image" Property="Source"
                                    Value="{Binding HoverIconSource, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="imageBorder" Property="Background"
                                    Value="{DynamicResource tabSelected}" />
                            <Setter TargetName="image" Property="Source"
                                    Value="{Binding HoverIconSource, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>